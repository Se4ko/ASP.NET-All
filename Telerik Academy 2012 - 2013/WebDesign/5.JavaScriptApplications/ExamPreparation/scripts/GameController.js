// Generated by CoffeeScript 1.4.0
(function() {
  var MESSAGES_POLLING_INTERVAL_IN_MS, game, getMessages, messagesBuffer, scope;

  MESSAGES_POLLING_INTERVAL_IN_MS = 1000;

  game = $('.js-game');

  scope = game.closest('.js-view').data('scope');

  messagesBuffer = ['Game entered'];

  if (!scope.persister.isLoggedIn()) {
    location.hash = '#!/';
    return;
  }

  $('.js-logout').click(function() {
    return scope.persister.logout().then(function() {
      return location.hash = '#!/';
    }).fail(function(err) {
      return messagesBuffer.push(JSON.parse(err.responseText).Message);
    });
  });

  $('.js-nickname').text(scope.persister.getNickname());

  $('.js-show-scores').click(function() {
    return $('#scores').modal({
      remote: 'templates/scores.html'
    });
  });

  $('.js-show-create-game').popover({
    placement: 'bottom',
    html: true,
    content: $('#js-create-game-template').text()
  });

  game.on('submit', '.js-create-game', function() {
    var data,
      _this = this;
    data = $(this).serializeObject();
    $(this).find('input, button').attr('disabled', 'disabled');
    return setTimeout(function() {
      return scope.persister.createGame(data).then(function() {
        var text;
        text = $('[type = "submit"]').addClass('btn-success').val('Game created.');
        return setTimeout(function() {
          return $('.js-show-create-game').popover('hide');
        }, 1000);
      }).fail(function(err) {
        var message, text;
        $(_this).find('input, button').removeAttr('disabled');
        message = JSON.parse(err.responseText).Message;
        text = $('<p class="text-error" />').text(message);
        $(_this).append(text);
        return text.delay(1000).fadeOut();
      });
    }, 500);
  });

  scope.persister.getOpenGames().done(function(games) {
    var gameItemTemplate, html;
    gameItemTemplate = $('#js-game-item-template').text();
    html = games.map(function(game) {
      return Mustache.render(gameItemTemplate, game);
    }).join('');
    return $('.js-open-games').html(html).find('li').click(function(e) {
      e.preventDefault();
      return $('.js-join-game').modal('show').data('id', $(this).data('id'));
    });
  }).fail(function(err) {
    return messagesBuffer.push(JSON.parse(err.responseText).Message);
  });

  $('.js-join-game').submit(function(e) {
    var data,
      _this = this;
    data = $(this).serializeObject();
    data.id = $(this).data('id');
    $(this).find('input, button').attr('disabled', 'disabled');
    return setTimeout(function() {
      return scope.persister.joinGame(data).done(function() {
        $(_this).find('input, button').removeAttr('disabled');
        return $(_this).modal('hide');
      }).fail(function(err) {
        var message, text;
        $(_this).find('input, button').removeAttr('disabled');
        message = JSON.parse(err.responseText).Message;
        text = $('<p class="text-error" />').text(message);
        $(_this).find('.modal-body').append(text);
        return text.delay(1000).fadeOut();
      });
    }, 500);
  });

  scope.persister.getMyActiveGames().done(function(games) {
    var html;
    html = games.map(function(game) {
      return Mustache.render(gameItemTemplate, game);
    }).join('');
    return $('.js-my-active-games').html(html).find('li').click(function(e) {
      return e.preventDefault();
    });
  }).fail(function(err) {
    return messagesBuffer.push(JSON.parse(err.responseText).Message);
  });

  setTimeout(getMessages = (function() {
    scope.persister.getUnreadMessages().done(function(messages) {
      return Array.prototype.push.apply(messagesBuffer, messages);
    }).fail(function(err) {
      return messagesBuffer.push(JSON.parse(err.responseText).Message);
    });
    if (!(messagesBuffer.length > 0)) {
      return;
    }
    $('.js-messages-feed').prepend(messagesBuffer.map(function(msg) {
      return $('<p />').text(msg);
    }));
    messagesBuffer.length = 0;
    return setTimeout(getMessages, MESSAGES_POLLING_INTERVAL_IN_MS);
  }), 0);

}).call(this);
